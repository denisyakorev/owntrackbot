# Generated by Django 2.0.3 on 2018-03-24 13:18

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload', models.FileField(upload_to=core.models.user_directory_path)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'achievments',
                'verbose_name': 'achievment',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='category name')),
                ('aim', models.TextField(blank=True, verbose_name='what person want to get')),
                ('completed_tasks', models.IntegerField(blank=True, null=True)),
                ('spent_time', models.IntegerField(blank=True, null=True)),
                ('lazy_days', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['lazy_days'],
                'verbose_name': 'category',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, verbose_name='username')),
                ('completed_tasks', models.IntegerField(blank=True, null=True)),
                ('spent_time', models.IntegerField(blank=True, null=True)),
                ('lazy_days', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('categories', models.ManyToManyField(blank=True, to='core.Category', verbose_name='category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'profiles',
                'ordering': ['-created_at'],
                'verbose_name': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Programm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='programm name')),
                ('is_active', models.BinaryField(default=False)),
                ('description', models.TextField(blank=True, verbose_name='what is this programm for')),
                ('completed_tasks', models.IntegerField(blank=True, null=True)),
                ('spent_time', models.IntegerField(blank=True, null=True)),
                ('lazy_days', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
            options={
                'verbose_name_plural': 'programms',
                'ordering': ['lazy_days'],
                'verbose_name': 'programm',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='task')),
                ('is_finished', models.BinaryField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('plan_date', models.DateField(blank=True, null=True)),
                ('finish_date', models.DateField(blank=True, null=True)),
                ('spent_time', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, verbose_name='what is this task about')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Profile')),
                ('programm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Programm')),
            ],
            options={
                'verbose_name_plural': 'tasks',
                'ordering': ['-finish_date'],
                'verbose_name': 'task',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spent_time', models.IntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Task')),
            ],
            options={
                'verbose_name_plural': 'transactions',
                'ordering': ['-created_at'],
                'verbose_name': 'transaction',
            },
        ),
        migrations.AddField(
            model_name='achievment',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Profile'),
        ),
        migrations.AddField(
            model_name='achievment',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Task'),
        ),
    ]
